name: Windows Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: 3.6 # optional, default is 3.x
      
    - name: Setup MSYS2
      # You may pin to the exact commit or the version.
      # uses: msys2/setup-msys2@ac10a2ce1afd21103e8ef0a5e30e0d38f2ba9a3b
      uses: msys2/setup-msys2@v2
      with:
        # Update MSYS2 installation through pacman
        update: true # optional

    - name: x64 Build
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: python .\build.py build -p x64 gtk3
      working-directory: ${{github.workspace}}

    - name: Zip x64 Release
      # You may pin to the exact commit or the version.
      # uses: TheDoctor0/zip-release@a1afcab9c664c9976ac398fa831eac67bed1eb0e
      uses: TheDoctor0/zip-release@0.4.1
      with:
        # Filename for archive
        filename: gtk_msvc_x64.zip # default is release.zip
        # Working directory before zipping
        directory: ./.. # optional, default is .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload x64 Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip
